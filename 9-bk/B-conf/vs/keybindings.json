// -1
// -1 29 may 2023 - KEYBINDINGS
// -1
[
  // --- edit
  {
    "key": "cmd+shift+backspace",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  // --- save
  {
    "key": "cmd+s",
    "command": "workbench.action.files.saveAll"
  },
  // go to next error
  {
    "key": "cmd+[IntlBackslash]",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  // --- intellisense
  {
    "key": "shift+space",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
  },
  // --- navigation
  {
    "key": "ctrl+cmd+left",
    "command": "workbench.action.navigateBack"
  },
  {
    "key": "ctrl+cmd+right",
    "command": "workbench.action.navigateForward"
  },
  // --- edition fold / unfold
  {
    "key": "cmd+0",
    "command": "editor.fold",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+cmd+0",
    "command": "editor.unfold"
  },
  // -1
  // -1 SNIPPETS
  // -1
  // -1 css
  {
    "key": "cmd+shift+k",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": ".$1 {\n\t@apply $2;\n}" // -3
    }
  },
  // {
  //   "key": "cmd+shift+k",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "axlog('🌑', \\$page.url.pathname, 'xxx', false, 'MOUNT', true);" // -3
  //   }
  // },
  // 1 html
  {
    "key": "cmd+shift+m",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "<div class='$2'>$1</div>$3" // -3
    }
  },
  // 1 debug
  {
    "key": "cmd+shift+d",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "debugger;" // -2
    }
  },
  {
    "key": "cmd+shift+r",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "export let CONTENT: any[] = []"
    }
  },
  // {
  //   "key": "cmd+;",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "--------------------------------" // -1
  //   }
  // },
  {
    "key": "cmd+;",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": " bg-red-500 " // -1
    }
  },
  {
    "key": "cmd+shift+alt+l",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.log(`🐬 -' : ${JSON.stringify($1, null, 4)}`);" // -1
    }
  },
  {
    "key": "cmd+shift+l",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": "console.log($1);" // -1
    }
  },
  // {
  //   "key": "cmd+shift+i",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "{ \n \"text\": \"$1\", \n \"isWholeLine\": false, \n \"color\": \"$2\",\n \"backgroundColor\": \"transparent\", \n \"overviewRulerColor\": \"transparent\" \n },"
  //   }
  // },
  // {
  //   "key": "cmd+shift+s",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "const $1 = ($2) => {\n\t$3\n} "
  //   }
  // },
  // -3
  // -3 DEBUG
  // -3
  // ### cmd+shift+; ==> quick fix
  // {
  //   "key": "cmd+shift+j",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "($1) => { $2 }"
  //   }
  // },
  // {
  //   "key": "cmd+shift+u",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "import { $1 } from \"$lib/$2\" "
  //   }
  // },
  // {
  //   "key": "cmd+shift+enter",
  //   "command": "workbench.action.debug.start"
  // },
  // {
  //   "key": "cmd+alt+enter",
  //   "command": "workbench.action.debug.restart",
  //   "when": "inDebugMode"
  // },
  // {
  //   "key": "[IntlBackslash]",
  //   "command": "workbench.action.debug.stepOver",
  //   "when": "debugState == 'stopped'"
  // },
  // {
  //   "key": "alt+1",
  //   "command": "editor.action.marker.nextInFiles",
  //   "when": "editorFocus"
  // },
  // -3 ###
  // -3 ### [cmd + number]
  // -3 ###
  {
    "key": "cmd+9",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "cmd+8",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": " class=\"$1\" " // -0
    }
  },
  {
    "key": "alt+cmd+b",
    "command": "workbench.action.closeAuxiliaryBar"
  },
  {
    "key": "cmd+7",
    "command": "editor.action.insertSnippet",
    "when": "editorTextFocus",
    "args": {
      "snippet": " style='$1'" // -3
    }
  },
  // {
  //   "key": "cmd+7",
  //   "command": "editor.action.insertSnippet",
  //   "when": "editorTextFocus",
  //   "args": {
  //     "snippet": "@apply $1; " // -0
  //   }
  // },
  //  ??? z
  // {
  //   "key": "ctrl+shift+-",
  //   "command": "-workbench.action.navigateForward",
  //   "when": "canNavigateForward"
  // },
  // {
  //   "key": "ctrl+-",
  //   "command": "-workbench.action.navigateBack",
  //   "when": "canNavigateBack"
  // },
  // {
  //   "key": "shift+alt+down",
  //   "command": "-editor.action.copyLinesDownAction",
  //   "when": "editorTextFocus && !editorReadonly"
  // },
  // {
  //   "key": "shift+alt+down",
  //   "command": "-notebook.cell.copyDown",
  //   "when": "notebookEditorFocused && !inputFocus"
  // },
  // {
  //   "key": "shift+alt+down",
  //   "command": "cursorWordEndLeftSelect"
  // },
  // {
  //   "key": "cmd+1",
  //   "command": "-workbench.action.focusFirstEditorGroup"
  // }
  // ###
  // ### Z
  // ###
  //  terminal (delete inside term)
  // {
  //   "key": "cmd+left",
  //   "command": "workbench.action.terminal.sendSequence",
  //   "args": { "text": "\u001bb" }
  // },
  // {
  //   "key": "cmd+right",
  //   "command": "workbench.action.terminal.sendSequence",
  //   "args": { "text": "\u001bf" }
  // },
  // {
  //   "key": "cmd+backspace",
  //   "command": "workbench.action.terminal.sendSequence",
  //   "args": { "text": "0x17" }
  // },
  // {
  //   "key": "ctrl+backspace",
  //   "command": "workbench.action.terminal.sendSequence",
  //   "args": { "text": "0x18" }
  // }
  //  z
  // --- jump bracket todo
  // Jump to matching bracket	⇧⌘\	editor.action.jumpToBracket
  {
    "key": "alt+cmd+0",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+cmd+0",
    "command": "highlight-matching-tag.jumpToMatchingTag"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "cmd+1",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+[Comma]",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+3",
    "command": "-workbench.action.focusThirdEditorGroup"
  },
  {
    "key": "cmd+3",
    "command": "workbench.files.action.showActiveFileInExplorer"
  }
  // {
  // 	"key": "ctrl+shift+alt+cmd+l",
  // 	"command": "-editor.action.jumpToBracket",
  // 	"when": "editorTextFocus"
  // },
]
// ###
// ### END
// ###